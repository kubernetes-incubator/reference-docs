# Translations for Kubernetes API specifications.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: io.k8s.api.authorization.v1\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI +ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: LocalSubjectAccessReview
msgid "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking."
msgstr ""

#: LocalSubjectAccessReview.apiVersion
msgid "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
msgstr ""

#: LocalSubjectAccessReview.kind
msgid "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
msgstr ""

#: LocalSubjectAccessReview.spec
msgid "Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted."
msgstr ""

#: LocalSubjectAccessReview.status
msgid "Status is filled in by the server and indicates whether the request is allowed or not"
msgstr ""

#: NonResourceAttributes
msgid "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
msgstr ""

#: NonResourceAttributes.path
msgid "Path is the URL path of the request"
msgstr ""

#: NonResourceAttributes.verb
msgid "Verb is the standard HTTP verb"
msgstr ""

#: NonResourceRule
msgid "NonResourceRule holds information that describes a rule for the non-resource"
msgstr ""

#: NonResourceRule.nonResourceURLs
msgid "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all."
msgstr ""

#: NonResourceRule.verbs
msgid "Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all."
msgstr ""

#: ResourceAttributes
msgid "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
msgstr ""

#: ResourceAttributes.group
msgid "Group is the API Group of the Resource.  \"*\" means all."
msgstr ""

#: ResourceAttributes.name
msgid "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all."
msgstr ""

#: ResourceAttributes.namespace
msgid "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview"
msgstr ""

#: ResourceAttributes.resource
msgid "Resource is one of the existing resource types.  \"*\" means all."
msgstr ""

#: ResourceAttributes.subresource
msgid "Subresource is one of the existing resource types.  \"\" means none."
msgstr ""

#: ResourceAttributes.verb
msgid "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
msgstr ""

#: ResourceAttributes.version
msgid "Version is the API Version of the Resource.  \"*\" means all."
msgstr ""

#: ResourceRule
msgid "ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
msgstr ""

#: ResourceRule.apiGroups
msgid "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all."
msgstr ""

#: ResourceRule.resourceNames
msgid "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all."
msgstr ""

#: ResourceRule.resources
msgid ""
"Resources is a list of resources this rule applies to.  \"*\" means all in the specified apiGroups."
" \"*/foo\" represents the subresource 'foo' for all resources in the specified apiGroups."
msgstr ""

#: ResourceRule.verbs
msgid "Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
msgstr ""

#: SelfSubjectAccessReview
msgid "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action"
msgstr ""

# SelfSubjectAccessReview.apiVersion
# same as LocalSubjectAccessReview.apiVersion

# SelfSubjectAccessReview.kind
# same as LocalSubjectAccessReview.kind

#: SelfSubjectAccessReview.spec
msgid "Spec holds information about the request being evaluated.  user and groups must be empty"
msgstr ""

# SelfSubjectAccessReview.status
# same as LocalSubjectAccessReview.status

#: SelfSubjectAccessReviewSpec
msgid "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
msgstr ""

#: SelfSubjectAccessReviewSpec.nonResourceAttributes
msgid "NonResourceAttributes describes information for a non-resource access request"
msgstr ""

#: SelfSubjectAccessReviewSpec.resourceAttributes
msgid "ResourceAuthorizationAttributes describes information for a resource access request"
msgstr ""

#: SelfSubjectRulesReview
msgid "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server."
msgstr ""

# SelfSubjectRulesReview.apiVersion
# same as LocalSubjectAccessReview.apiVersion

# SelfSubjectRulesReview.kind
# same as LocalSubjectAccessReview.kind

#: SelfSubjectRulesReview.spec
msgid "Spec holds information about the request being evaluated."
msgstr ""

#: SelfSubjectRulesReview.status
msgid "Status is filled in by the server and indicates the set of actions a user can perform."
msgstr ""

#: SelfSubjectRulesReviewSpec
msgid ""
msgstr ""

#: SelfSubjectRulesReviewSpec.namespace
msgid "Namespace to evaluate rules for. Required."
msgstr ""

#: SubjectAccessReview
msgid "SubjectAccessReview checks whether or not a user or group can perform an action."
msgstr ""

# SubjectAccessReview.apiVersion
# same as LocalSubjectAccessReview.apiVersion

# SubjectAccessReview.kind
# same as LocalSubjectAccessReview.kind

#: SubjectAccessReview.spec
msgid "Spec holds information about the request being evaluated"
msgstr ""

# SubjectAccessReview.status
# same as LocalSubjectAccessReview.status

#: SubjectAccessReviewSpec
msgid "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
msgstr ""

#: SubjectAccessReviewSpec.extra
msgid "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here."
msgstr ""

#: SubjectAccessReviewSpec.groups
msgid "Groups is the groups you're testing for."
msgstr ""

# SubjectAccessReviewSpec.nonResourceAttributes
# same as SelfSubjectAccessReviewSpec.nonResourceAttributes

# SubjectAccessReviewSpec.resourceAttributes
# same as SelfSubjectAccessReviewSpec.resourceAttributes

#: SubjectAccessReviewSpec.uid
msgid "UID information about the requesting user."
msgstr ""

#: SubjectAccessReviewSpec.user
msgid "User is the user you're testing for. If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups"
msgstr ""

#: SubjectAccessReviewStatus
msgid "SubjectAccessReviewStatus"
msgstr ""

#: SubjectAccessReviewStatus.allowed
msgid "Allowed is required. True if the action would be allowed, false otherwise."
msgstr ""

#: SubjectAccessReviewStatus.denied
msgid "Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true."
msgstr ""

#: SubjectAccessReviewStatus.evaluationError
msgid "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request."
msgstr ""

#: SubjectAccessReviewStatus.reason
msgid "Reason is optional.  It indicates why a request was allowed or denied."
msgstr ""

#: SubjectRulesReviewStatus
msgid "SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
msgstr ""

#: SubjectRulesReviewStatus.evaluationError
msgid "EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete."
msgstr ""

#: SubjectRulesReviewStatus.incomplete
msgid "Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation."
msgstr ""

#: SubjectRulesReviewStatus.nonResourceRules
msgid "NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
msgstr ""

#: SubjectRulesReviewStatus.resourceRules
msgid "ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
msgstr ""
